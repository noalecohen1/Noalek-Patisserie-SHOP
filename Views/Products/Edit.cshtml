@model Patisserie.Models.Product

@{
    ViewBag.Title = "Edit " + Model.Name;
}

<div class="row justify-content-between">
    <h1 class="my-4">@ViewBag.Title</h1>
    <span class="col-4 d-flex flex-row-reverse align-items-center">
        @Html.ActionLink("Back to Products List", "Index", null, new { @class = "btn btn-outline-secondary" })
    </span>
</div>

<hr class="accessory" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductID)
    <div class="form-group row">
        <div class="col-2">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-2">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-2">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="form-group row col-12 col-md-5">
            <div class="col-5">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 mt-2" })
            </div>
            <div class="col-md-6">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", style = "margin-left: .2em;" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group row col">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2 mt-2" })
            </div>
            <div class="col-md-6">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control", style = "margin-left: 2.5em;" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col form-group">
            @Html.LabelFor(model => model.IsDairy, htmlAttributes: new { @class = "control-label col-md-2 badge badge-pill badge-light" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDairy)
                    @Html.ValidationMessageFor(model => model.IsDairy, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-4 form-group">
            @Html.LabelFor(model => model.IsGlutenFree, htmlAttributes: new { @class = "control-label col-md-4 badge badge-pill badge-info" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsGlutenFree)
                    @Html.ValidationMessageFor(model => model.IsGlutenFree, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col form-group">
            @Html.LabelFor(model => model.IsVegan, htmlAttributes: new { @class = "control-label col-md-2 badge badge-pill badge-success" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsVegan)
                    @Html.ValidationMessageFor(model => model.IsVegan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.PopularityRate)
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
