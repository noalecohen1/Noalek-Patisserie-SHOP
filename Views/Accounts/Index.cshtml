@model IEnumerable<Patisserie.Models.Account>

@{
    ViewBag.Title = "Accounts";
}

<div class="row justify-content-between">
    <h1 class="col my-4">@ViewBag.Title</h1>

    <span class="col-4 d-flex flex-row-reverse align-items-center">
        @Html.ActionLink("Create a New Account", "Create", null, new { @class = "btn btn-outline-primary" })
    </span>
</div>


<div class="container p-0">
    <h4 class="m-0">Filter accounts by: </h4>
    @using (Html.BeginForm("", "Accounts", FormMethod.Post, new { @class = "form-inline" }))
    {
        <div class="form-group">
            @Html.TextBox("SearchEmail", "", new { @class = "form-control", placeholder = "Email" })
        </div>
        <div class="form-group">
            @Html.TextBox("SearchPhone", "", new { @class = "form-control", placeholder = "Phone" })
        </div>
        <div class="form-group">
            @Html.TextBox("SearchAddress", "", new { @class = "form-control", placeholder = "Address" })
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> isModerator = new List<SelectListItem>();
                isModerator.Add(new SelectListItem
                {
                    Text = "Admin",
                    Value = "True"
                });
                isModerator.Add(new SelectListItem
                {
                    Text = "Customer",
                    Value = "False",
                });
            }

            @Html.DropDownList("searchIsModerator", isModerator, "All Accounts Types", new { @class = "form-control" })
        </div>

        <input class="btn btn-primary ml-2 btn-search-posts" type="submit" value="Search" />
    }

</div>

<table class="table" id="accounts">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.IsModerator)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Password)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="account" data-id="@item.AccountID">
            <td>
                @if (item.IsModerator)
                {
                    <span class="badge badge-primary">Admin</span>
                }
                else
                {
                    <span class="badge badge-secondary">Customer</span>
                }
            </td>
            <td>
                @item.Email
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.AccountID }, new { @class = "btn btn-secondary" })
                <button class="btn btn-danger btn-delete" 
                        data-email="@item.Email" data-id="@item.AccountID">
                    Delete
                </button>
            </td>
        </tr>
    }
</table>

@Html.Partial("_DeleteModal", null, new ViewDataDictionary { { "title", "email" }, { "category", "Accounts" } })

<script type="text/javascript">
    $(".account").click(function (e) {
        window.location = window.location.href + "/Details/" + $(this).data("id");
    });
</script>
