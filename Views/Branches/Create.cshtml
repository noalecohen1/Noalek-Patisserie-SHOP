@model Patisserie.Models.Branch

@{
    ViewBag.Title = "Create a New Branch";
}

<div class="row justify-content-between">
    <h1 class="my-4">@ViewBag.Title</h1>
    <span class="col-4 d-flex flex-row-reverse align-items-center">
        @Html.ActionLink("Back to Branches List", "Index", null, new { @class = "btn btn-outline-secondary" })
    </span>
</div>
<hr class="accessory" />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group form-row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            @if (ViewBag.isNameInDB != null && ViewBag.isNameInDB == true)
            {
                <div class="text-danger offset-2 col-8">
                    Name is already in use.
                </div>
            }
        </div>

        <div class="form-group form-row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            @if (ViewBag.isAddressInDB != null && ViewBag.isAddressInDB == true)
            {
                <div class="text-danger offset-2 col-8">
                    Address is already in use.
                </div>
            }
        </div>

        <div class="form-group form-row">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
